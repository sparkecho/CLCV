TODO List

* Image Read function
  plan: use library optcl

* Image Write function
  plan: use library optcl

* Image Show function
  plan: improve efficiency

* Data Structure of image
  choose the best one from these plans:
** (1) 2d arrays
   for multichannels(eg.rgb):
   #2A((rgbrgbrgb)
       (rgbrgbrgb))
** (2) 3d arrays
   for multichannels(eg.rgb):
   #3A(((r g b) (r g b) (r g b))
       ((r g b) (r g b) (r g b)))
** (3) list of 2d arrays
   for multichannels(eg.rgb):
   '(#2A((r r r) (r r r))
     #2A((g g g) (g g g))
     #2A((b b b) (b b b)))
** Dicision
   Plan (2) is chosen.
   In order to be compatible with opticl, and simplify the
Data Structure of image.
* Pixel Manipulation
** (1) bitwise and Manipulation
   (logand #b1010 #b1101) => #b1000
   Argulist: (&REST INTEGERS)
** (2) bitwise or Manipulation
   (logior #b1010 #b1101) => #b1111
   Argulist: (&REST INTEGERS)
** (3) bitwise xor Manipulation
   logxor
** (4) optimizing array operations
   Use *sb-c::with-array-data* to optimize array operation
* color convert
Extend with multitype, 8uc3 and 8uc1 is only supported right now.
* Integrate kbd event and mouse event
something like:
Event event = waitEvent(30);
if (event == 'a') {
    do something;
} else if (event == ESC_pressed) {
    do something;
} else if (event == MOUSELBUTTON_RELEASED) {
    do something;
} else {
    do something;
}

Maybe make use of GLFW.
